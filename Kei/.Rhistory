# Install and load `ggplot2` and `dplyr`
library("ggplot2")
library("dplyr")
library("maps")
# Read in the election data file (.csv)
# BE SURE TO SET YOUR WORKING DIRECTORY!
election <- read.csv('data/2016_US_County_Level_Presidential_Results.csv', stringsAsFactors = FALSE)
# Inspect the `election` data frame to understand the data you're working with
colnames(election)
View(election)
# Use `map_data()` to load the `county` map of the US, storing it in a variable
counties <- map_data("county")
View(counties)
# Inspect this data frame to understand what data yu're working with
View(head(counties, 10))
shiny::runApp('~/Desktop/INFO_201/Assignments/info201-Final-Project/Kei')
runApp('~/Desktop/INFO_201/Assignments/info201-Final-Project/Kei')
View(counties)
setwd("~/Desktop/INFO_201/Assignments/info201-Final-Project/Kei")
summer <- read.csv("../data/summer.csv", stringsAsFactors = FALSE)
View(summer)
runApp()
library("shiny")
library("ggplot2")
library("dplyr")
library("rsconnect")
summer <- read.csv("../data/summer.csv", stringsAsFactors = FALSE)
all_country <- sort(unique(summer$Country))
code <- read.csv("../data/dictionary.csv", stringsAsFactors = FALSE)
shinyServer(function(input, output) {
output$plot <- renderPlot({
plot.data <- summer %>%
filter(summer$Discipline == input$sports, summer$Year == input$period) %>%
mutate(AAA = paste(Country, Medal)) %>%
group_by(Country, Medal, AAA) %>%
count()
if (is.na(plot.data)) {
return("AAAA")
} else {
ggplot(plot.data) +
geom_histogram(mapping=aes(x=Country, y=n, fill = Medal), stat="identity", color = "black") +
scale_fill_manual(values = c("#ac6b25", "#ffd700", "#c0c0c0")) +
coord_flip()
}
})
output$userText <- renderText({
code.data <- code %>%
filter(Code == toupper(input$text))
return(paste0(input$text, " = ", code.data$Country))
})
})
plot.data <- summer %>%
filter(summer$Discipline == "Archery", summer$Year == "1944") %>%
mutate(AAA = paste(Country, Medal)) %>%
group_by(Country, Medal, AAA) %>%
count()
library("shiny")
library("dplyr")
library("rsconnect")
summer <- read.csv("../data/summer.csv", stringsAsFactors = FALSE)
all_sports <- sort(unique(summer$Discipline))
shinyUI(fluidPage(
titlePanel("Comparing total medal"),
sidebarLayout(
sidebarPanel(
selectInput(inputId = "sports",
label = "Which sports are you interested in",
choices = all_sports
),
sliderInput(inputId = "period",
label = "What period are you interested in",
min = 1896, max = 2012, value = 1896, step = 4,
ticks = TRUE,
animate = animationOptions(interval = 4000)
),
helpText(h5("Notice: "), p("There is no such data recorded if the error shows", strong(em("argument is of length zero")))),
textInput("text", label = h5("Convert abbreviation to actual name"), value = "USA"),
textOutput('userText')
),
mainPanel(
plotOutput("plot")
)
)
))
gender <- summer %>%
group_by(Year, Gender) %>%
count()
View(gender)
aaaa <- ggplot(gender) +
geom_line(mapping=aes(x=Year, y=n), stat="identity")
View(aaaa)
ggplot(gender) +
geom_line(mapping=aes(x=Year, y=n), stat="identity")
ggplot(gender) +
geom_line(mapping=aes(x=Year, y= (gender$Gender == "Men")), stat="identity") +
geom_line(mapping=aes(x=Year, y= (gender$Gender == "Women"))), stat="identity")
ggplot(gender) +
geom_line(mapping=aes(x=Year, y= (gender$Gender == "Men")), stat="identity") +
geom_line(mapping=aes(x=Year, y= (gender$Gender == "Women")), stat="identity")
gender_male <- summer %>%
filter(Gender == "Men") %>%
group_by(Year, Gender) %>%
count()
View(gender_male)
gender_female <- summer %>%
filter(Gender == "Women") %>%
group_by(Year, Gender) %>%
count()
View(gender_female)
ggplot(gender) +
geom_line(mapping=aes(x=Year, y=n, color = Gender), stat="identity")
runApp()
library(maps)
install.packages("world")
map("world")
world <- map_data("world")
g1 <- ggplot(world)
g1 <- g1 + geom_polygon(aes(x = long, y = lat, group = group))
g1
library("shiny")
library("dplyr")
library("rsconnect")
summer <- read.csv("../data/summer.csv", stringsAsFactors = FALSE)
all_sports <- sort(unique(summer$Discipline))
shinyUI(fluidPage(
titlePanel("Comparing total medal"),
sidebarLayout(
sidebarPanel(
selectInput(inputId = "sports",
label = "Which sports are you interested in",
choices = all_sports
),
sliderInput(inputId = "period",
label = "What period are you interested in",
min = 1896, max = 2012, value = 1896, step = 4,
ticks = TRUE,
animate = animationOptions(interval = 4000)
),
helpText(h5("Notice: "), p("There is no such data recorded if the error shows", strong(em("argument is of length zero")))),
textInput("text", label = h5("Convert abbreviation to actual name"), value = "USA"),
textOutput('userText')
),
mainPanel(
plotOutput("plot")
)
)
))
runApp()
runApp()
runApp()
runApp()
install.packages("rworldmap")
library(rworldmap)
sVisit <- joinCountryData2Map(summer, joinCode="Country", nameJoinColumn="country")
world.map <- map_data ("world")
class(world.map)
head(world.map)
ggplot(world.map, aes(x = long, y = lat)) + geom_path(aes(group = group))
world <- map_data("world")
g2 <- ggplot(world)
g2 <- g2 + geom_polygon(aes(x = long, y = lat, group = group),
colour = "gray20", size = 0.2,
alpha = 0.2, fill = "gray40")
g2 <- g2 + coord_equal()
g2
head(world)
View(world)
code <- read.csv("../data/dictionary.csv", stringsAsFactors = FALSE)
View(code)
runApp()
runApp('~/Desktop/INFO_201/Excersises/ch16-shiny/exercise-4')
runApp()
runApp()
all_country <- sort(unique(summer$Country))
summer <- read.csv("../data/summer.csv", stringsAsFactors = FALSE)
all_country <- sort(unique(summer$Country))
code <- read.csv("../data/dictionary.csv", stringsAsFactors = FALSE)
View(code)
View(summer)
runApp()
code[202, ]=c("The IOC country code for mixed teams at the Olympics", "ZZX")
code <- code[202, ]=c("The IOC country code for mixed teams at the Olympics", "ZZX")
code <- code[202, ]=c("The IOC country code for mixed teams at the Olympics", "ZZX")
code[202, ]=c("The IOC country code for mixed teams at the Olympics", "ZZX")
View(code)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
summer <- read.csv("../data/summer.csv", stringsAsFactors = FALSE)
all_country <- sort(unique(summer$Country))
code <- read.csv("../data/dictionary.csv", stringsAsFactors = FALSE)
code[202, ]=c("The IOC country code for mixed teams at the Olympics", "ZZX")
runApp()
runApp()
plot.data <- summer %>%
filter(summer$Discipline == "Swimming", summer$Year == "2012") %>%
mutate(AAA = paste(Country, Medal)) %>%
group_by(Country, Medal, AAA) %>%
count()
View(plot.data)
ggplot(plot.data) +
geom_histogram(mapping=aes(x=Country, y=n, fill = Medal), stat="identity") +
scale_fill_manual(values = alpha(c("#ac6b25", "#ffd700", "#c0c0c0"), 0.7)) +
labs(y = "Number of medals") +
coord_flip()
ggplot(plot.data) +
geom_histogram(mapping=aes(x=Country, y=n, fill = Medal), stat="identity") +
scale_fill_manual(values = alpha(c("#ac6b25", "#ffd700", "#c0c0c0"), 0.7)) +
labs(y = "Number of medals") +
geom_text(aes(label = y), position = position_stack(vjust = 0.5)) +
coord_flip()
ggplot(plot.data) +
geom_histogram(mapping=aes(x=Country, y=n, fill = Medal), stat="identity") +
scale_fill_manual(values = alpha(c("#ac6b25", "#ffd700", "#c0c0c0"), 0.7)) +
labs(y = "Number of medals") +
geom_text(aes(label = n), position = position_stack(vjust = 0.5)) +
coord_flip()
View(plot.data)
runApp()
ggplot(plot.data) +
geom_histogram(mapping=aes(x=Country, y=n, fill = Medal), stat="identity") +
scale_fill_manual(values = alpha(c("#ac6b25", "#ffd700", "#c0c0c0"), 0.7)) +
labs(y = "Number of medals") +
geom_text(aes(label = "n"), position = position_stack(vjust = 0.5)) +
coord_flip()
ggplot(plot.data) +
geom_histogram(mapping=aes(x=Country, y=n, fill = Medal), stat="identity") +
scale_fill_manual(values = alpha(c("#ac6b25", "#ffd700", "#c0c0c0"), 0.7)) +
labs(y = "Number of medals") +
geom_text(aes(label = plot.data$n), position = position_stack(vjust = 0.5)) +
coord_flip()
ggplot(plot.data) +
geom_histogram(mapping=aes(x=Country, y=n, fill = Medal), stat="identity") +
scale_fill_manual(values = alpha(c("#ac6b25", "#ffd700", "#c0c0c0"), 0.7)) +
labs(y = "Number of medals") +
geom_text(aes(x = Country, y = n, label = n), position = position_stack(vjust = 0.5)) +
coord_flip()
ggplot(plot.data) +
geom_histogram(mapping=aes(x=Country, y=n, fill = Medal), stat="identity") +
scale_fill_manual(values = alpha(c("#ac6b25", "#ffd700", "#c0c0c0"), 0.7)) +
labs(y = "Number of medals") +
geom_text(aes(x = Country, y = n, label = n)) +
coord_flip()
ggplot(plot.data) +
geom_histogram(mapping=aes(x=Country, y=n, fill = Medal), stat="identity") +
scale_fill_manual(values = alpha(c("#ac6b25", "#ffd700", "#c0c0c0"), 0.7)) +
labs(y = "Number of medals") +
geom_text(aes(x = Country, y = n, label = n), position = dodge) +
coord_flip()
ggplot(plot.data) +
geom_histogram(mapping=aes(x=Country, y=n, fill = Medal), stat="identity") +
scale_fill_manual(values = alpha(c("#ac6b25", "#ffd700", "#c0c0c0"), 0.7)) +
labs(y = "Number of medals") +
geom_text(aes(x = Country, y = n, label = n), position = "dodge") +
coord_flip()
runApp()
ggplot(plot.data, aes(x=Country, y=n, fill = Medal)) +
geom_histogram(stat="identity") +
scale_fill_manual(values = alpha(c("#ac6b25", "#ffd700", "#c0c0c0"), 0.7)) +
labs(y = "Number of medals") +
coord_flip()
ggplot(plot.data, aes(x=Country, y=n, fill = Medal)) +
geom_histogram(stat="identity") +
scale_fill_manual(values = alpha(c("#ac6b25", "#ffd700", "#c0c0c0"), 0.7)) +
geom_text(aes(label = n), position = position_stack(vjust = 0.5)) +
labs(y = "Number of medals") +
coord_flip()
runApp()
View(plot.data)
runApp()
runApp()
runApp()
runApp()
runApp()
View(plot.data)
View(summer)
medal <- summer$Medal
medal <- unique(summer$Medal)
runApp()
medal <- unique(summer$Medal)
shinyServer(function(input, output) {
output$plot <- renderPlot({
plot.data <- summer %>%
filter(summer$Discipline == input$sports, summer$Year == input$period) %>%
mutate(AAA = paste(Country, Medal)) %>%
group_by(Country, Medal, AAA) %>%
count()
if (is.na(plot.data)) {
return("")
} else {
ggplot(plot.data, aes(x=Country, y=n, fill = medal)) +
geom_histogram(stat="identity") +
scale_fill_manual(values = alpha(c("#ac6b25", "#ffd700", "#c0c0c0"), 0.7)) +
geom_text(aes(label = n), position = position_stack(vjust = 0.5), color = "white") +
labs(y = "Number of medals") +
coord_flip()
}
})
output$userText <- renderText({
code.data <- code %>%
filter(Code == toupper(input$text))
return(paste0(input$text, " = ", code.data$Country))
})
})
runApp()
runApp()
medal <- unique(summer$Medal)
runApp()
unique(summer$Medal)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/Desktop/INFO_201/Assignments/info201-Final-Project/Shannon')
runApp('~/Desktop/INFO_201/Assignments/info201-Final-Project/Shannon')
runApp('~/Desktop/INFO_201/Assignments/info201-Final-Project/Nick')
runApp()
runApp()
runApp()
runApp()
runApp()
View(plot.data)
plot.data <- summer %>%
filter(summer$Discipline == "Swimming", summer$Year == "2000") %>%
mutate(AAA = paste(Country, Medal)) %>%
arrange(n) %>%
group_by(Country, Medal, AAA) %>%
count()
View(plot.data)
plot.data <- summer %>%
filter(summer$Discipline == "Swimming", summer$Year == "2000") %>%
mutate(AAA = paste(Country, Medal)) %>%
arrange(n)
plot.data <- summer %>%
filter(summer$Discipline == "Swimming", summer$Year == "2000") %>%
mutate(AAA = paste(Country, Medal))
View(plot.data)
plot.data <- summer %>%
filter(summer$Discipline == "Swimming", summer$Year == "2000") %>%
mutate(AAA = paste(Country, Medal)) %>%
group_by(Country, Medal, AAA) %>%
count() %>%
arrange(n)
View(plot.data)
plot.data <- summer %>%
filter(summer$Discipline == "Swimming", summer$Year == "2000") %>%
mutate(AAA = paste(Country, Medal)) %>%
group_by(Country, Medal, AAA) %>%
count() %>%
arrange(-n)
plot.data <- summer %>%
filter(summer$Discipline == "Swimming", summer$Year == "2000") %>%
mutate(AAA = paste(Country, Medal)) %>%
group_by(Country, Medal, AAA) %>%
count() %>%
arrange(-n)
View(plot.data)
plot.data[1, ]
plot.data[1, ]$n
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
"AAA"
paste0("AAA\n", "BBB")
paste0("AAA"\n, "BBB")
paste0("AAA\r\n", "BBB")
s = "おはよう。\r\nこんにちは。\r\nさようなら。"
s
"AAA\nBBB"
"AAA\rBBB"
"AAA\nBBB"
"aaa"\n"bbb"
paste0("AAA\r\n", "BBB", sep="¥n")
paste0("AAA\r\n", "BBB", sep="\n")
paste0("AAA\r\n", "BBB", sep="")
paste0("AAA\r\n", "BBB", sep="
")
paste0("AAA", "BBB", sep=br())
runApp()
runApp()
runApp()
runApp()
summer <- read.csv("../data/summer.csv", stringsAsFactors = FALSE)
code <- read.csv("../data/dictionary.csv", stringsAsFactors = FALSE)
View(code)
View(summer)
unique(summer$Country)
unique(code$Country)
unique(code$Country)
unique(summer$Country)
unique(code$Code)
code$Code - summer$Country
c(code$Code, summer$Country)
unique(c(code$Code, summer$Country))
runApp()
left_join(code, summer, by = Code)
left_join(code, summer, by = "Code")
left_join(code, summer)
left_join(code, summer, by = c("Code" = "Country"))
View(code)
summer <- %>% group_by(Country)
summer <- group_by(Country)
summer <- group_by("Country")
summer <- summer %>% group_by(Country)
View(summer)
summer <- summer %>% group_by(Country)
View(summer)
library("shiny")
library("ggplot2")
library("dplyr")
library("rsconnect")
summer <- read.csv("../data/summer.csv", stringsAsFactors = FALSE)
all_country <- sort(unique(summer$Country))
code <- read.csv("../data/dictionary.csv", stringsAsFactors = FALSE)
code[202, ]=c("The IOC country code for mixed teams at the Olympics", "ZZX")
shinyServer(function(input, output) {
output$plot <- renderPlot({
plot.data <- summer %>%
filter(summer$Discipline == input$sports, summer$Year == input$period) %>%
mutate(AAA = paste(Country, Medal)) %>%
group_by(Country, Medal, AAA) %>%
count()
if (is.na(plot.data)) {
return("")
} else {
ggplot(plot.data, aes(x=Country, y=n, fill = Medal)) +
geom_histogram(stat="identity") +
scale_fill_manual(values = alpha(c("#ac6b25", "#ffd700", "#c0c0c0"), 0.7)) +
geom_text(aes(label = n), position = position_stack(vjust = 0.5), color = "white") +
labs(y = "Number of medals") +
coord_flip()
}
})
output$userText <- renderText({
code.data <- code %>%
filter(Code == toupper(input$text))
return(paste0(input$text, " = ", code.data$Country))
})
output$ranking <- renderText({
plot.data <- summer %>%
filter(summer$Discipline == input$sports, summer$Year == input$period) %>%
mutate(AAA = paste(Country, Medal)) %>%
group_by(Country, Medal, AAA) %>%
count() %>%
arrange(-n)
return(paste0("1st: ", plot.data[1,]$Country, " 2nd: ",
plot.data[2,]$Country, " 3rd: ", plot.data[3,]$Country))
})
})
library("shiny")
library("dplyr")
library("rsconnect")
summer <- read.csv("../data/summer.csv", stringsAsFactors = FALSE)
all_sports <- sort(unique(summer$Discipline))
shinyUI(fluidPage(
titlePanel("Comparing total medal"),
sidebarLayout(
sidebarPanel(
selectInput(inputId = "sports",
label = "Which sports are you interested in",
choices = all_sports
),
sliderInput(inputId = "period",
label = "What period are you interested in",
min = 1896, max = 2012, value = 2012, step = 4,
ticks = TRUE,
animate = animationOptions(interval = 4000)
),
helpText(h5("Notice: "),
p("There is no such data recorded if the error shows", strong(em("argument is of length zero")))),
textInput("text", label = h5("Convert abbreviation to actual name"), value = "USA"),
textOutput('userText')
),
mainPanel(
plotOutput("plot"),
textOutput("ranking")
)
)
))
runApp()
View(code)
View(summer)
runApp()
runApp()
